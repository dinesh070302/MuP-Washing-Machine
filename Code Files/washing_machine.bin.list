EMU8086 GENERATED LISTING. MACHINE CODE <- SOURCE.
 
washing_machine.bin -- emu8086 assembler version: 4.08  
 
[ 19-04-2020  --  23:39:18 ] 
 
===================================================================================================
[LINE]     LOC: MACHINE CODE                          SOURCE
===================================================================================================
 
[   1]        :                                       #make_bin#
[   2]        :                                       
[   3]        :                                       #LOAD_SEGMENT=FFFFh#
[   4]        :                                       #LOAD_OFFSET=0000h#
[   5]        :                                       
[   6]        :                                       #CS=0000h#
[   7]        :                                       #IP=0000h#
[   8]        :                                       
[   9]        :                                       #DS=0000h#
[  10]        :                                       #ES=0000h#
[  11]        :                                       
[  12]        :                                       #SS=0000h#
[  13]        :                                       #SP=FFFEh#
[  14]        :                                       
[  15]        :                                       #AX=0000h#
[  16]        :                                       #BX=0000h#
[  17]        :                                       #CX=0000h#
[  18]        :                                       #DX=0000h#
[  19]        :                                       #SI=0000h#
[  20]        :                                       #DI=0000h#
[  21]        :                                       #BP=0000h#
[  22]        :                                       
[  23]    0000: E9 FD 03                              jmp     st1
[  24]    0003: 90                                    nop
[  25]        :                                       ;These two commands take up 4 bytes (3+1)
[  26]        :                                       
[  27]        :                                       ;INT 1 is not used, so 1 x4 = 00004h - it is stored with 0
[  28]    0004: 00 00                                 dw      0000
[  29]    0006: 00 00                                 dw      0000
[  30]        :                                       		
[  31]        :                                       ;STOP - is used as nmi - IP value points to STOP_INT and CS value will remain at 0000h
[  32]    0008: 65 06                                 dw      STOP_INT
[  33]    000A: 00 00                                 dw      0000
[  34]        :                                       		
[  35]        :                                       ;INT 3 to INT 255 is not used, so IP and CS intialized to 0000h, so, that occupies (255-3+1)*4=1012 bits
[  36]        :                                       		
[  37]    000C: 00 00 00 00 00 00 00 00 00 00 00 00   db     1012 dup(0)
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00 00 00 00 00 00 00 00 00 
                00 00 00 00                         
[  38]        :                                       
[  39]        :                                       ;main program
[  40]        :                                       
[  41]    0400: FA                                    		st1:	  cli
[  42]        :                                       		
[  43]        :                                       ; intialize ds, es,ss to start of RAM
[  44]        :                                       
[  45]    0401: B8 00 02                              mov       ax,0200h
[  46]    0404: 8E D8                                 mov       ds,ax
[  47]    0406: 8E C0                                 mov       es,ax
[  48]    0408: 8E D0                                 mov       ss,ax
[  49]    040A: BC FE FF                              mov       sp,0FFFEH
[  50]        :                                       
[  51]        :                                       		;initialize 8255
[  52]    040D: B0 83                                 mov     al,10000011b
[  53]    040F: E6 06                                 out     06h,al
[  54]        :                                       
[  55]        :                                       		;initialize 8253(1) - COUNTER0 in mode 3
[  56]    0411: B0 36                                 mov     al,00110110b
[  57]    0413: E6 16                                 out     16h,al
[  58]        :                                       
[  59]        :                                       ;initialize 8253(1) - COUNTER1 in mode 3
[  60]    0415: B0 76                                 mov     al,01110110b
[  61]    0417: E6 16                                 out     16h,al
[  62]        :                                       
[  63]        :                                       ;initialize 8253(1) - COUNTER2 in mode 1
[  64]    0419: B0 B2                                 mov     al,10110010b
[  65]    041B: E6 16                                 out     16h,al
[  66]        :                                       		
[  67]        :                                       ;initialize 8253(2) - COUNTER0 in mode 1
[  68]    041D: B0 32                                 mov     al,00110010b
[  69]    041F: E6 26                                 out     26h,al	
[  70]        :                                       		
[  71]        :                                       ;initialize 8253(2) - COUNTER1 in mode 1
[  72]    0421: B0 72                                 mov     al,01110010b
[  73]    0423: E6 26                                 out     26h,al
[  74]        :                                       
[  75]        :                                       ;initialize 8253(2) - COUNTER2 in mode 3
[  76]    0425: B0 B6                                 mov     al,10110110b
[  77]    0427: E6 26                                 out     26h,al
[  78]        :                                       
[  79]        :                                       ;Wait until load button is pressed
[  80]        :                                       
[  81]        :                                       		;Load is pressed for the first time
[  82]        :                                       		;dl keeps count of the number of times user presses LOAD
[  83]    0429: B2 00                                 start:  mov     dl,00h								
[  84]    042B: E4 04                                 X0:	    in 	    al,04h
[  85]    042D: 24 01                                 	    and 	al,01h
[  86]    042F: 74 FA                                 	    jz	    X0
[  87]    0431: FE C2                                 	    inc 	dl
[  88]    0433: E8 56 02                              	    CALL    DEBOUNCE
[  89]        :                                       		
[  90]        :                                       		
[  91]        :                                       		;Checking if there are more LOAD presses
[  92]    0436: E4 04                                 X1:     in      al,04h
[  93]    0438: 24 01                                 and     al,01h
[  94]        :                                       
[  95]    043A: 74 09                                 jz      X2
[  96]    043C: 80 FA 03                              cmp     dl,3
[  97]        :                                       ;Resetting the count after 3 presses
[  98]    043F: 75 02                                 jne     Z1
[  99]    0441: B2 00                                 mov     dl,00h
[ 100]        :                                       
[ 101]        :                                       ;incrementing load count
[ 102]    0443: FE C2                                 Z1:     inc     dl
[ 103]        :                                       
[ 104]        :                                       ;poll for START input
[ 105]    0445: E4 04                                 X2:     in      al,04h
[ 106]    0447: 24 02                                 and     al,02h
[ 107]    0449: 75 05                                 jnz     X3
[ 108]    044B: E8 3E 02                              CALL    DEBOUNCE
[ 109]        :                                       
[ 110]    044E: EB E6                                 jmp     X1
[ 111]        :                                       
[ 112]        :                                       
[ 113]        :                                       ;loading count to set the alarm freq - 0.5 Hz
[ 114]    0450: BB 02 00                              X3:      mov    bx,02h
[ 115]        :                                       
[ 116]        :                                       ;DOOR_CHK is used to check if the door is locked
[ 117]        :                                       ;if not raise an alarm and wait for door close
[ 118]    0453: E8 D4 01                              call    DOOR_CHK
[ 119]        :                                       
[ 120]    0456:                                       X4:     ;locking the door(latch)
[ 121]    0456: B0 01                                 mov     al,01h
[ 122]    0458: E6 00                                 out     00h,al
[ 123]        :                                       
[ 124]        :                                       ;checking wash mode
[ 125]    045A: 8A E2                                 mov     ah, dl
[ 126]        :                                       
[ 127]        :                                       ;Load count into 8253(1) COUNTER0 - 61A8h = 25,000
[ 128]    045C: B0 A8                                 mov     al,0a8h
[ 129]    045E: E6 10                                 out     10h,al
[ 130]        :                                       
[ 131]    0460: B0 61                                 mov     al,61h
[ 132]    0462: E6 10                                 out     10h,al
[ 133]        :                                       
[ 134]        :                                       ;Load count into 8253(1) COUNTER1 - 64h = 100
[ 135]    0464: B0 64                                 mov     al,64h
[ 136]    0466: E6 12                                 out     12h,al
[ 137]        :                                       
[ 138]    0468: B0 00                                 mov     al,00h
[ 139]    046A: E6 12                                 out     12h,al
[ 140]        :                                       
[ 141]        :                                       ;ah has the wash mode value
[ 142]    046C: 80 FC 01                              cmp     ah,01h
[ 143]    046F: 75 03                                 jne     Y1
[ 144]    0471: E8 12 00                              call    LIGHT
[ 145]        :                                       
[ 146]    0474: 80 FC 02                              Y1:     cmp     ah,02h
[ 147]    0477: 75 03                                 jne     Y2
[ 148]    0479: E8 42 00                              call    MED
[ 149]        :                                       
[ 150]    047C: 80 FC 03                              Y2:     cmp     ah,03h
[ 151]    047F: 75 03                                 jne     Y3
[ 152]    0481: E8 6F 00                              call    HEAVY
[ 153]        :                                       
[ 154]    0484:                                       Y3:     ;end routine
[ 155]    0484: EB A3                                 jmp     start
[ 156]        :                                       
[ 157]        :                                       
[ 158]        :                                       ;Procedure for Light mode of Operation:
[ 159]    0486:                                       LIGHT 	proc near
[ 160]        :                                       
[ 161]        :                                       ;Begin Rinse Cycle
[ 162]        :                                       
[ 163]    0486: E8 B9 00                              call    WATER_IN
[ 164]        :                                       
[ 165]        :                                       ;Load the required count in dx: 78h = 120s - Rinse for 2 mins
[ 166]    0489: B2 78                                 mov     dl,78h
[ 167]    048B: B6 00                                 mov     dh,00h
[ 168]        :                                       
[ 169]    048D: E8 1A 01                              call    RINSE
[ 170]        :                                       
[ 171]    0490: E8 E5 00                              call    WATER_OUT
[ 172]        :                                       		
[ 173]        :                                       		
[ 174]        :                                       ;Begin Wash Cycle
[ 175]        :                                       
[ 176]    0493: E8 AC 00                              call    WATER_IN
[ 177]        :                                       
[ 178]        :                                       ;Load the required count in dx: 0b4h = 180s -Wash for 3 mins
[ 179]    0496: B2 B4                                 mov     dl,0b4h
[ 180]    0498: B6 00                                 mov     dh,00h
[ 181]        :                                       		
[ 182]    049A: E8 27 01                              call    WASH
[ 183]        :                                       
[ 184]    049D: E8 D8 00                              call    WATER_OUT
[ 185]        :                                       		
[ 186]        :                                       
[ 187]        :                                       ;Begin Rinse Cycle (2nd)
[ 188]        :                                       		
[ 189]    04A0: E8 9F 00                              call    WATER_IN
[ 190]        :                                       
[ 191]        :                                       ;Load the required count in dx: 78h = 120s - Rinse again for 2 mins
[ 192]    04A3: B2 78                                 		mov 	dl,78h
[ 193]    04A5: B6 00                                 mov     dh,00h
[ 194]        :                                       		
[ 195]    04A7: E8 00 01                              call    RINSE
[ 196]        :                                       		
[ 197]    04AA: E8 CB 00                              call    WATER_OUT
[ 198]        :                                       
[ 199]        :                                       
[ 200]        :                                       ;Begin Dry Cycle
[ 201]        :                                       
[ 202]        :                                       ;Load the required count in dx: 78h = 120s - Dry for 2 mins
[ 203]    04AD: B2 78                                 mov     dl,78h
[ 204]    04AF: B6 00                                 mov     dh,00h
[ 205]        :                                       		
[ 206]    04B1: E8 32 01                              call    DRY
[ 207]        :                                       
[ 208]    04B4: E8 C5 01                              call    DELAY1
[ 209]        :                                       		
[ 210]        :                                       		;Sound buzzer at the end of a complete cycle
[ 211]    04B7: E8 46 01                              call    BUZZER_1
[ 212]        :                                       
[ 213]        :                                       		;Open lock at the end of the complete cycle
[ 214]    04BA: E8 8C 01                              		call    OPEN_LOCK
[ 215]        :                                       
[ 216]        :                                       		
[ 217]    04BD: C3                                    ret
[ 218]        :                                       LIGHT endp
[ 219]        :                                       
[ 220]        :                                       ;Procedure for Medium mode of Operation:
[ 221]    04BE:                                       MED		proc near
[ 222]        :                                       
[ 223]        :                                       ;Begin Rinse Cycle
[ 224]        :                                       
[ 225]    04BE: E8 81 00                              call    WATER_IN
[ 226]        :                                       
[ 227]        :                                       ;Load the required count in dx: 0b4h = 180s - Rinse for 3 mins
[ 228]    04C1: B2 B4                                 mov     dl,0b4h
[ 229]    04C3: B6 00                                 mov     dh,00h
[ 230]        :                                       		
[ 231]    04C5: E8 E2 00                              call    RINSE
[ 232]        :                                       
[ 233]    04C8: E8 AD 00                              call    WATER_OUT
[ 234]        :                                       
[ 235]        :                                       
[ 236]        :                                       ;Begin Wash Cycle
[ 237]        :                                       
[ 238]    04CB: E8 74 00                              call    WATER_IN
[ 239]        :                                       
[ 240]        :                                       ;Load the required count in dx:	012ch = 300s - Wash for 5 mins
[ 241]    04CE: B2 2C                                 mov     dl,2ch
[ 242]    04D0: B6 01                                 mov     dh,01h
[ 243]        :                                       		
[ 244]    04D2: E8 EF 00                              call    WASH
[ 245]        :                                       
[ 246]    04D5: E8 A0 00                              call    WATER_OUT
[ 247]        :                                       
[ 248]        :                                       ;Begin Rinse Cycle (2)
[ 249]        :                                       
[ 250]    04D8: E8 67 00                              call    WATER_IN
[ 251]        :                                       
[ 252]        :                                       ;Load the required count in dx: 0b4h = 180s - Rinse again for 3 mins
[ 253]    04DB: B2 B4                                 mov     dl,0b4h
[ 254]    04DD: B6 00                                 mov     dh,00h
[ 255]        :                                       
[ 256]    04DF: E8 C8 00                              		call    RINSE
[ 257]        :                                       
[ 258]    04E2: E8 93 00                              call    WATER_OUT
[ 259]        :                                       
[ 260]        :                                       ;Begin Dry Cycle
[ 261]        :                                       
[ 262]        :                                       ;Load the required count in dx: f0h = 240s - Dry for 4 mins
[ 263]    04E5: B2 F0                                 mov     dl,0f0h
[ 264]    04E7: B6 00                                 mov     dh,00h
[ 265]        :                                       
[ 266]    04E9: E8 FA 00                              call    DRY
[ 267]        :                                       		
[ 268]        :                                       		;Sound buzzer at the end of a complete cycle
[ 269]    04EC: E8 11 01                              call    BUZZER_1
[ 270]        :                                       		
[ 271]        :                                       		;Open lock at the end of the complete cycle
[ 272]    04EF: E8 57 01                              call    OPEN_LOCK
[ 273]        :                                       
[ 274]        :                                       
[ 275]    04F2: C3                                    ret
[ 276]        :                                       MED endp
[ 277]        :                                       
[ 278]        :                                       ;Procedure for Medium mode of Operation:
[ 279]    04F3:                                       HEAVY	proc near
[ 280]        :                                       
[ 281]        :                                       ;Begin Rinse Cycle
[ 282]        :                                       
[ 283]    04F3: E8 4C 00                              call    WATER_IN
[ 284]        :                                       
[ 285]        :                                       ;Load the required count in dx: 0b4h = 180s - Rinse for 3 mins
[ 286]    04F6: B2 B4                                 mov     dl,0b4h
[ 287]    04F8: B6 00                                 mov     dh,00h
[ 288]        :                                       		
[ 289]    04FA: E8 AD 00                              call    RINSE
[ 290]        :                                       
[ 291]    04FD: E8 78 00                              call    WATER_OUT
[ 292]        :                                       
[ 293]        :                                       
[ 294]        :                                       ;Begin Wash Cycle
[ 295]        :                                       
[ 296]    0500: E8 3F 00                              call    WATER_IN
[ 297]        :                                       
[ 298]        :                                       ;Load the required count in dx: 012ch = 300s - Wash for 5 mins
[ 299]    0503: B2 2C                                 mov     dl,2ch
[ 300]    0505: B6 01                                 mov     dh,01h
[ 301]        :                                       		
[ 302]    0507: E8 BA 00                              call    WASH
[ 303]        :                                       
[ 304]    050A: E8 6B 00                              call    WATER_OUT
[ 305]        :                                       
[ 306]        :                                       ;Begin Rinse Cycle (2)
[ 307]        :                                       
[ 308]    050D: E8 32 00                              call    WATER_IN
[ 309]        :                                       
[ 310]        :                                       ;Load the required count in dx: 0b4h = 180s - Rinse again for 3 mins
[ 311]    0510: B2 B4                                 mov     dl,0b4h
[ 312]    0512: B6 00                                 mov     dh,00h
[ 313]        :                                       		
[ 314]    0514: E8 93 00                              call    RINSE
[ 315]        :                                       		
[ 316]    0517: E8 5E 00                              call    WATER_OUT
[ 317]        :                                       
[ 318]        :                                       ;Begin Wash Cycle (2)
[ 319]        :                                       
[ 320]    051A: E8 25 00                              call    WATER_IN
[ 321]        :                                       
[ 322]        :                                       ;Load the required count in dx: 012ch = 300s - Wash again for 5 mins
[ 323]    051D: B2 2C                                 mov     dl,2ch
[ 324]    051F: B6 01                                 mov     dh,01h
[ 325]        :                                       		
[ 326]    0521: E8 A0 00                              call    WASH
[ 327]        :                                       
[ 328]    0524: E8 51 00                              call    WATER_OUT
[ 329]        :                                       
[ 330]        :                                       ;Begin Rinse Cycle (3)
[ 331]        :                                       
[ 332]    0527: E8 18 00                              call    WATER_IN
[ 333]        :                                       
[ 334]        :                                       ;Load the required count in dx: 0b4h = 180s - Rinse again for 3 mins
[ 335]    052A: B2 B4                                 mov     dl,0b4h
[ 336]    052C: B6 00                                 mov     dh,00h
[ 337]        :                                       		
[ 338]    052E: E8 79 00                              call    RINSE
[ 339]        :                                       		
[ 340]    0531: E8 44 00                              call    WATER_OUT
[ 341]        :                                       
[ 342]        :                                       ;Begin Dry Cycle
[ 343]        :                                       
[ 344]        :                                       ;Load the required count in dx: 0f0h = 240s -Dry for 4 mins
[ 345]    0534: B2 F0                                 mov     dl,0f0h
[ 346]    0536: B6 00                                 mov     dh,00h
[ 347]        :                                       		
[ 348]    0538: E8 AB 00                              call    DRY
[ 349]        :                                       
[ 350]        :                                       		;Sound buzzer at the end of a complete cycle
[ 351]    053B: E8 C2 00                              call    BUZZER_1
[ 352]        :                                       
[ 353]        :                                       		;Open lock at the end of the complete cycle
[ 354]    053E: E8 08 01                              call    OPEN_LOCK
[ 355]        :                                       
[ 356]        :                                       
[ 357]    0541: C3                                    ret
[ 358]        :                                       HEAVY endp
[ 359]        :                                       		
[ 360]        :                                       ; Procedure to open the water in relay and check is water is full
[ 361]    0542:                                       WATER_IN proc near
[ 362]        :                                       
[ 363]        :                                       ;open water-input relay
[ 364]    0542: B0 03                                 W_IN0:  mov     al,00000011b
[ 365]    0544: E6 00                                 out     00h,al
[ 366]        :                                       
[ 367]        :                                       ;Wait for 10 min, for water to get filled. Load count 0258h = 600s
[ 368]    0546: B0 58                                 mov     al,58h
[ 369]    0548: E6 22                                 out     22h,al
[ 370]        :                                       
[ 371]    054A: B0 02                                 mov     al,02h
[ 372]    054C: E6 22                                 out     22h,al
[ 373]        :                                       
[ 374]        :                                       ;Enabling counter gates - PC5
[ 375]    054E: B0 20                                 mov     al,00100000b
[ 376]    0550: E6 04                                 out     04h,al
[ 377]        :                                       
[ 378]        :                                       ;CLOCK EDGE DELAY
[ 379]    0552: E8 27 01                              CALL    DELAY1
[ 380]        :                                       
[ 381]    0555:                                       W_IN1:  ; Poll for counter output
[ 382]    0555: E4 02                                 in      al,02h
[ 383]    0557: 24 40                                 and     al,01000000b
[ 384]    0559: 75 08                                 jnz     W_IN2
[ 385]        :                                       		
[ 386]        :                                       ;check if adequate amount of water is filled
[ 387]    055B: E4 02                                 in      al,02h
[ 388]    055D: 24 01                                 and     al,00000001b
[ 389]        :                                       
[ 390]    055F: 75 0E                                 jnz     W_IN3
[ 391]    0561: EB F2                                 jmp     W_IN1
[ 392]        :                                       
[ 393]    0563:                                       W_IN2:  ;alarm sound
[ 394]        :                                       
[ 395]        :                                       ;gates disable
[ 396]    0563: B0 00                                 mov     al,00h
[ 397]    0565: E6 04                                 out     04h,al
[ 398]        :                                       
[ 399]        :                                       ;Wait till the user resumes, call stop routine
[ 400]        :                                       ;load count to set the frequency of the buzzer to notify the user of an issue - buzzer freq=1 Hz
[ 401]    0567: BB 01 00                              mov     bx,01h
[ 402]        :                                       
[ 403]    056A: E8 E1 00                              call    STOP_R
[ 404]    056D: EB D3                                 jmp     W_IN0
[ 405]        :                                       
[ 406]    056F:                                       W_IN3:  ;close water-in valve after water is full
[ 407]    056F: B0 01                                 mov     al,00000001b
[ 408]    0571: E6 00                                 out     00h,al
[ 409]        :                                       
[ 410]        :                                       ;gates disable
[ 411]    0573: B0 00                                 mov     al,00h
[ 412]    0575: E6 04                                 out     04h,al
[ 413]        :                                       
[ 414]        :                                       
[ 415]    0577: C3                                    ret
[ 416]        :                                       WATER_IN  endp
[ 417]        :                                       
[ 418]        :                                       ;Procedure to open the water out relay and check if water is empty
[ 419]    0578:                                       WATER_OUT proc near
[ 420]        :                                       
[ 421]        :                                       ;open water-output relay
[ 422]    0578: B0 05                                 W_OUT0: mov     al,00000101b
[ 423]    057A: E6 00                                 out     00h,al
[ 424]        :                                       
[ 425]        :                                       ;Wait for 10 min, for water to get filled. Load count 0258h = 600s
[ 426]    057C: B0 58                                 mov     al,58h
[ 427]    057E: E6 22                                 out     22h,al
[ 428]        :                                       
[ 429]    0580: B0 02                                 mov     al,02h
[ 430]    0582: E6 22                                 out     22h,al
[ 431]        :                                       
[ 432]        :                                       ;Enabling counter gates- PC5
[ 433]    0584: B0 20                                 mov     al,00100000b
[ 434]    0586: E6 04                                 out     04h,al
[ 435]        :                                       
[ 436]        :                                       		;CLOCK EDGE DELAY
[ 437]    0588: E8 F1 00                              CALL    DELAY1
[ 438]        :                                       
[ 439]    058B:                                       W_OUT1: ; Poll for counter
[ 440]    058B: E4 02                                 in      al,02h
[ 441]    058D: 24 40                                 and     al,01000000b
[ 442]    058F: 75 08                                 jnz     W_OUT2
[ 443]        :                                       		
[ 444]        :                                       ;check if adequate amount of water is filled
[ 445]    0591: E4 02                                 in      al,02h
[ 446]    0593: 24 02                                 and     al,00000010b
[ 447]        :                                       
[ 448]    0595: 75 0A                                 jnz     W_OUT3
[ 449]    0597: EB F2                                 jmp     W_OUT1
[ 450]        :                                       
[ 451]    0599:                                       W_OUT2: ; alarm sound
[ 452]        :                                       
[ 453]        :                                       ;Wait till the user resumes, call stop routine
[ 454]        :                                       ;load count to set the frequency of the buzzer
[ 455]    0599: BB 01 00                              mov     bx,01h
[ 456]        :                                       
[ 457]    059C: E8 AF 00                              call    STOP_R
[ 458]    059F: EB D7                                 jmp     W_OUT0
[ 459]        :                                       
[ 460]    05A1:                                       W_OUT3: ;close water-in valve after water is full
[ 461]    05A1: B0 01                                 mov     al,00000001b
[ 462]    05A3: E6 00                                 out     00h,al
[ 463]        :                                       
[ 464]        :                                       ;gates disable
[ 465]    05A5: B0 00                                 mov     al,00h
[ 466]    05A7: E6 04                                 out     04h,al
[ 467]        :                                       
[ 468]        :                                       
[ 469]    05A9: C3                                    ret
[ 470]        :                                       WATER_OUT  endp
[ 471]        :                                       
[ 472]        :                                       ;Procedure for Rinse cycle
[ 473]    05AA:                                       RINSE   proc near
[ 474]        :                                       
[ 475]        :                                       ;dx has the count value for time
[ 476]        :                                       	
[ 477]        :                                       		;LSB
[ 478]    05AA: 8A C2                                 mov	    al,dl
[ 479]    05AC: E6 14                                 	    out 	14h,al
[ 480]        :                                       ;MSB
[ 481]    05AE: 8A C6                                 mov     al,dh
[ 482]    05B0: E6 14                                 out     14h,al
[ 483]        :                                       	
[ 484]        :                                       	    ;Activate the gate of Counter (8253 (1) G2) for Agitator
[ 485]        :                                       	    ;This keeps the agitator active for the required time
[ 486]    05B2: B0 10                                 	    mov	    al,00010000b
[ 487]    05B4: E6 04                                 	    out	    04h,al
[ 488]        :                                       
[ 489]        :                                       ;Give a delay for the Counter to activate
[ 490]        :                                       	    ;Call delay
[ 491]    05B6: E8 C3 00                              	    CALL    DELAY1
[ 492]        :                                       	
[ 493]        :                                       	
[ 494]    05B9:                                       R1:		;Start polling for o/p of CNTR to go low
[ 495]    05B9: E4 02                                 in 	    al,02h
[ 496]    05BB: 24 10                                 	    and	    al,00010000b
[ 497]    05BD: 74 FA                                 	    jz      R1	
[ 498]        :                                       
[ 499]        :                                       ;Then disable the counter gates (8253 (1) G2) - shut Agitator
[ 500]    05BF: B0 00                                 	    mov	    al,00h
[ 501]    05C1: E6 04                                 	    out	    04h,al
[ 502]        :                                       
[ 503]        :                                       
[ 504]    05C3: C3                                    ret
[ 505]        :                                       RINSE   endp
[ 506]        :                                       
[ 507]        :                                       ;Procedure for Wash cycle
[ 508]    05C4:                                       WASH    proc near
[ 509]        :                                       
[ 510]        :                                       ;dx has the count value for time
[ 511]        :                                       	
[ 512]        :                                       		;LSB
[ 513]    05C4: 8A C2                                 mov		al,dl
[ 514]    05C6: E6 14                                 		out 	14h,al
[ 515]        :                                       ;MSB
[ 516]    05C8: 8A C6                                 mov     al,dh
[ 517]    05CA: E6 14                                 out     14h,al
[ 518]        :                                       		
[ 519]        :                                       ;Open detergent valve(relay)
[ 520]    05CC: B0 21                                 mov     al,00100001b
[ 521]    05CE: E6 00                                 out     00h,al
[ 522]        :                                       	
[ 523]        :                                       		;Activate the gate of Counter (8253 (1) G2) for Agitator
[ 524]        :                                       		;This keeps the agitator active for the required time
[ 525]    05D0: B0 10                                 		mov		al,00010000b
[ 526]    05D2: E6 04                                 		out		04h,al
[ 527]        :                                       
[ 528]        :                                       ;Give a delay for the CNTR to activate
[ 529]    05D4: E8 A5 00                              		CALL 	DELAY1
[ 530]        :                                       		
[ 531]        :                                       		
[ 532]        :                                       
[ 533]    05D7:                                       W1:		;Start polling for o/p of CNTR to go low		
[ 534]    05D7: E4 02                                 		in 	al,02h
[ 535]    05D9: 24 10                                 		and	al,00010000b
[ 536]    05DB: 74 FA                                 		jz	W1
[ 537]        :                                       	
[ 538]        :                                       ;Then disable the counter gates (8253 (1) G2) - Stops Agitator
[ 539]    05DD: B0 00                                 		mov	al,00h
[ 540]    05DF: E6 04                                 		out	04h,al
[ 541]        :                                       
[ 542]        :                                       ;detergent valve closed
[ 543]    05E1: B0 01                                 mov     al,00000001b
[ 544]    05E3: E6 00                                 out     00h,al
[ 545]        :                                       
[ 546]        :                                       
[ 547]    05E5: C3                                    ret
[ 548]        :                                       WASH    endp
[ 549]        :                                       
[ 550]    05E6:                                       DRY     proc near
[ 551]        :                                       
[ 552]        :                                       ;dx has the count value for time
[ 553]        :                                       		
[ 554]        :                                       	    ;LSB
[ 555]    05E6: 8A C2                                 mov	    al,dl
[ 556]    05E8: E6 20                                 	    out 	20h,al
[ 557]        :                                       ;MSB
[ 558]    05EA: 8A C6                                 mov     al,dh
[ 559]    05EC: E6 20                                 out     20h,al
[ 560]        :                                       	
[ 561]        :                                       	    ;Activate the gate of CNTR (8253 (2) G0) for Revolving Tub
[ 562]        :                                       	    ;This keeps the revolving tub active for the required time
[ 563]    05EE: B0 C0                                 	    mov	    al,11000000b
[ 564]    05F0: E6 04                                 	    out	    04h,al
[ 565]        :                                       
[ 566]        :                                       ;Give a delay for the CNTR to activate
[ 567]    05F2: E8 87 00                              	    CALL	DELAY1
[ 568]        :                                       		
[ 569]        :                                       		
[ 570]    05F5:                                       D1:     ;Start polling for o/p of CNTR to go low
[ 571]    05F5: E4 02                                 	    in 	    al,02h
[ 572]    05F7: 24 20                                 	    and	    al,00100000b
[ 573]    05F9: 74 FA                                 	    jz	    D1
[ 574]        :                                       	
[ 575]        :                                       ;Then disable the counter gates (8253 (2) G0) - Stop Revolving tub
[ 576]    05FB: B0 00                                 	    mov	    al,00h
[ 577]    05FD: E6 04                                 	    out	    04h,al
[ 578]        :                                       
[ 579]        :                                       
[ 580]    05FF: C3                                    ret
[ 581]        :                                       DRY    endp
[ 582]        :                                       
[ 583]        :                                       ;Procedure for sounding the buzzer when the complete cycle ends
[ 584]    0600:                                       BUZZER_1 proc near
[ 585]        :                                       
[ 586]        :                                       ;sound buzzer for 10s
[ 587]        :                                       ;load the count in 8253(2)
[ 588]    0600: B0 04                                 mov     al,04h
[ 589]    0602: E6 24                                 out     24h,al
[ 590]        :                                       
[ 591]    0604: B0 00                                 mov     al,00h
[ 592]    0606: E6 24                                 out     24h,al
[ 593]        :                                       
[ 594]        :                                       ;gate enable, then delay, and then start counting
[ 595]        :                                       ;gate enable for 8253(2)CNT2 - Frequency of the buzzer and 8253(1)CNT2- Time for which buzzer is sounded
[ 596]    0608: B0 90                                 mov     al,10010000b
[ 597]    060A: E6 04                                 out     04h,al
[ 598]        :                                       
[ 599]        :                                       ;load count value for buzzer in 8253(1) CNT2
[ 600]        :                                       		
[ 601]        :                                       ;LSB
[ 602]    060C: B0 0A                                 mov     al,0ah
[ 603]    060E: E6 14                                 out     14h,al
[ 604]        :                                       
[ 605]        :                                       ;MSB
[ 606]    0610: B0 00                                 mov     al,00h
[ 607]    0612: E6 14                                 out     14h,al
[ 608]        :                                       
[ 609]        :                                       ;enable the buzzer
[ 610]    0614: B0 09                                 mov     al,00001001b
[ 611]    0616: E6 00                                 out     00h,al
[ 612]        :                                       
[ 613]        :                                       ;Give a delay for the CNTR to activate
[ 614]    0618: E8 61 00                              CALL    DELAY1
[ 615]        :                                       
[ 616]    061B:                                       B1:     ;Check if time (10s) is over
[ 617]    061B: E4 02                                 		in      al,02h
[ 618]    061D: 24 10                                 and     al,00010000b
[ 619]    061F: 74 FA                                 jz      B1
[ 620]        :                                       
[ 621]        :                                       ;disable the gate
[ 622]    0621: B0 00                                 mov     al,00h
[ 623]    0623: E6 04                                 out     04h,al
[ 624]        :                                       
[ 625]        :                                       ;disable the buzzer
[ 626]    0625: B0 01                                 mov     al, 01h
[ 627]    0627: E6 00                                 out     00h,al
[ 628]        :                                       
[ 629]        :                                       
[ 630]    0629: C3                                    ret
[ 631]        :                                       BUZZER_1 endp
[ 632]        :                                       
[ 633]        :                                       ;Procedure to check if the door is closed by the user:
[ 634]    062A:                                       DOOR_CHK proc near
[ 635]        :                                       
[ 636]        :                                       ; bx has the count
[ 637]        :                                       
[ 638]        :                                       		; LSB
[ 639]    062A: 8A C3                                 mov     al,bl
[ 640]    062C: E6 24                                 out     24h,al
[ 641]        :                                       ; MSB
[ 642]    062E: 8A C7                                 mov     al,bh
[ 643]    0630: E6 24                                 out     24h,al
[ 644]        :                                       
[ 645]        :                                       ;check if door is open
[ 646]    0632: E4 02                                 in      al,02h
[ 647]    0634: 24 08                                 and     al,08h
[ 648]        :                                       
[ 649]    0636: 75 0C                                 jnz     DC2
[ 650]        :                                       		
[ 651]        :                                       ;sound buzzer
[ 652]        :                                       ;enable alarm (Also enables buzzer)
[ 653]    0638: B0 10                                 mov     al,10h
[ 654]    063A: E6 00                                 out     00h,al
[ 655]        :                                       
[ 656]    063C:                                       DC1:    ;check if door is open (ASSUMED REED SWITCH O/P IS DIGITAL)
[ 657]        :                                       ;Buzzer is enabled until door closed
[ 658]    063C: E4 02                                 in      al,02h
[ 659]    063E: 24 08                                 and     al,08h
[ 660]    0640: 75 02                                 jnz     DC2
[ 661]    0642: EB F8                                 jmp     DC1
[ 662]        :                                       
[ 663]        :                                       
[ 664]    0644:                                       DC2:   	;disable buzzer
[ 665]    0644: B0 00                                 mov     al,00h
[ 666]    0646: E6 00                                 out     00h,al
[ 667]        :                                       		
[ 668]    0648: C3                                    ret
[ 669]        :                                       DOOR_CHK  endp
[ 670]        :                                       		
[ 671]        :                                       ;Procedure to open the latch holding the door:
[ 672]    0649:                                       OPEN_LOCK proc near
[ 673]        :                                       
[ 674]    0649: B0 00                                 mov     al,00h
[ 675]    064B: E6 00                                 out     00h,al
[ 676]        :                                       
[ 677]    064D: C3                                    ret
[ 678]        :                                       OPEN_LOCK endp
[ 679]        :                                       
[ 680]        :                                       ;Stop when there is an issue with the washing machine. For example: when the water is not full due to some reason.
[ 681]    064E:                                       STOP_R	proc near	
[ 682]        :                                       	
[ 683]        :                                       ;sound alarm (buzzer)
[ 684]        :                                       
[ 685]        :                                       ; bx has the count
[ 686]        :                                       		
[ 687]        :                                       ; LSB
[ 688]    064E: 8A C3                                 mov     al,bl
[ 689]    0650: E6 24                                 out     24h,al
[ 690]        :                                       ; MSB
[ 691]    0652: 8A C7                                 mov     al,bh
[ 692]    0654: E6 24                                 out     24h,al
[ 693]        :                                       
[ 694]        :                                       ;enabling buzzer
[ 695]    0656: B0 11                                 mov     al,11h
[ 696]    0658: E6 00                                 out     00h,al
[ 697]        :                                       
[ 698]    065A: E4 02                                 S1:		in		al,02h
[ 699]    065C: 24 04                                 		and 	al,00000100b
[ 700]    065E: 74 FA                                 		jz      S1
[ 701]        :                                       
[ 702]        :                                       ;disabling buzzer
[ 703]    0660: B0 01                                 mov     al,01h
[ 704]    0662: E6 00                                 out     00h,al
[ 705]        :                                       		
[ 706]    0664: C3                                    		ret
[ 707]        :                                       		STOP_R endp
[ 708]        :                                       
[ 709]        :                                       ;ISR for stop interrupt-NMI
[ 710]    0665:                                       STOP_INT:
[ 711]        :                                       
[ 712]        :                                       		;STOP ENABLE active
[ 713]    0665: B0 0F                                 mov     al,00001111b
[ 714]    0667: E6 06                                 out     06h,al
[ 715]        :                                       
[ 716]        :                                       		;Open door latch
[ 717]    0669: B0 00                                 mov     al,00h
[ 718]    066B: E6 00                                 out     00h,al
[ 719]        :                                       
[ 720]    066D:                                       SI1:    ;poll until resume button is pressed
[ 721]    066D: E4 02                                 		in      al,02h
[ 722]    066F: 24 04                                 and     al,00000100b
[ 723]    0671: 74 FA                                 jz      SI1
[ 724]        :                                       
[ 725]        :                                       		;on pressing resume,close door latch
[ 726]    0673: B0 01                                 		mov 	al,01h
[ 727]    0675: E6 00                                 		out		00h,al
[ 728]        :                                       
[ 729]        :                                       		;deactivate STOP ENABLE
[ 730]    0677: B0 0E                                 mov     al,00001110b
[ 731]    0679: E6 06                                 out     06h,al
[ 732]        :                                       
[ 733]        :                                       
[ 734]    067B: CF                                    iret
[ 735]        :                                       
[ 736]        :                                       
[ 737]        :                                       ;Procedure for 2 second delay		
[ 738]    067C:                                       DELAY1 proc near
[ 739]        :                                       
[ 740]        :                                       ;delay calculation
[ 741]        :                                       ;no. of cycles for loop = 18 if taken/ 5 if not taken = 49,999x 18 +5
[ 742]        :                                       ;no. of cycles for ret 16
[ 743]        :                                       ;no. of cycles for call 19
[ 744]        :                                       ;no. of cycles for mov 4
[ 745]        :                                       ;clock speed 1 MHz - 1 clock cycle 1us (micro seconds)
[ 746]        :                                       ;total no.cycles delay = clkcycles for call + mov cx,imm + (content of cx-1)*18 + 5 + ret = (19 + 4 + (18*49,999) + 5 + 16)* 1 us = 0.900026s
[ 747]        :                                       ;called 3 times, for approximately 2.7 seconds.
[ 748]        :                                       
[ 749]    067C: B9 50 C3                              mov     cx,50000
[ 750]    067F: E2 FE                                 deloop1: loop   deloop1
[ 751]        :                                       
[ 752]    0681: B9 50 C3                              mov     cx,50000
[ 753]    0684: E2 FE                                 deloop2: loop   deloop2
[ 754]        :                                       
[ 755]    0686: B9 50 C3                              mov     cx,50000
[ 756]    0689: E2 FE                                 deloop3: loop   deloop3
[ 757]        :                                       
[ 758]        :                                       
[ 759]    068B: C3                                    ret
[ 760]        :                                       DELAY1 endp
[ 761]        :                                       		
[ 762]        :                                       		
[ 763]        :                                       ;Procedure for debounce delay
[ 764]    068C:                                       DEBOUNCE proc near
[ 765]        :                                       
[ 766]        :                                       ;delay calculation
[ 767]        :                                       ;no. of cycles for loop = 18 if taken/ 5 if not taken = 14,999 x 18 + 5
[ 768]        :                                       ;no. of cycles for ret 16
[ 769]        :                                       ;no. of cycles for call 19
[ 770]        :                                       ;no. of cycles for mov 4
[ 771]        :                                       ;clock speed 1 MHz - 1 clock cycle 1us (micro seconds)
[ 772]        :                                       ;total no.cycles delay = clkcycles for call + mov cx,imm + (content of cx-1)*18+5 + ret= (19 + 4 + (18*14,999) + 5 + 16)* 1 us = 0.270026s
[ 773]        :                                       ;adjusted for proteus, due to CPU load
[ 774]        :                                       
[ 775]    068C: B9 98 3A                              mov     cx,15000
[ 776]    068F: E2 FE                                 debloop1: loop  debloop1
[ 777]        :                                       
[ 778]        :                                       	
[ 779]    0691: C3                                    ret
[ 780]        :                                       DEBOUNCE endp
[ 781]        :                                       
[ 782]        :                                       
[ 783]        :                                       
[ 784]        :                                       
[ 785]        :                                       
[ 786]        :                                       
[ 787]        :                                       
[ 788]        :                                       
[ 789]        :                                       
[ 790]        :                                       
[ 791]        :                                       
[ 792]        :                                       
[ 793]        :                                       
[ 794]        :                                       
[ 795]        :                                       
[ 796]        :                                       
[ 797]        :                                       
[ 798]        :                                       
[ 799]        :                                       
[ 800]        :                                       
[ 801]        :                                       
[ 802]        :                                       
[ 803]        :                                       
[ 804]        :                                       
[ 805]        :                                       
[ 806]        :                                       
 
===================================================================================================
 




===================================================================================================
